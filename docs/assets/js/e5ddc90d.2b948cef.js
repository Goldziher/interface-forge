(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[704],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(n),y=a,m=f["".concat(s,".").concat(y)]||f[y]||u[y]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},253:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return f}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],c={id:"using-typefactory-instances-in-factory-schemas",title:"Using TypeFactory instances in Factory Schemas",description:"Using TypeFactory instances in Factory Schemas",slug:"/factory-schema/using-typefactory-instances-in-factory-schemas"},s=void 0,l={unversionedId:"Schema/using-typefactory-instances-in-factory-schemas",id:"Schema/using-typefactory-instances-in-factory-schemas",isDocsHomePage:!1,title:"Using TypeFactory instances in Factory Schemas",description:"Using TypeFactory instances in Factory Schemas",source:"@site/docs/3-Schema/1-using-typefactory-instances.md",sourceDirName:"3-Schema",slug:"/factory-schema/using-typefactory-instances-in-factory-schemas",permalink:"/interfaceForge/docs/factory-schema/using-typefactory-instances-in-factory-schemas",editUrl:"https://github.com/Goldziher/interfaceForge/edit/main/docs/docs/3-Schema/1-using-typefactory-instances.md",version:"current",sidebarPosition:1,frontMatter:{id:"using-typefactory-instances-in-factory-schemas",title:"Using TypeFactory instances in Factory Schemas",description:"Using TypeFactory instances in Factory Schemas",slug:"/factory-schema/using-typefactory-instances-in-factory-schemas"},sidebar:"tutorialSidebar",previous:{title:"Creating and using Fixtures",permalink:"/interfaceForge/docs/usage/creating-and-using-fixtures"},next:{title:"Using the .use static method with nested factories",permalink:"/interfaceForge/docs/factory-schema/using-the-use-static-method-with-nested-factories"}},p=[],u={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Although the previous usage examples of default values use a simple object literal with static values, TypeFactory /\nFixtureFactory in fact expect what is called a ",(0,i.kt)("inlineCode",{parentName:"p"},"FactorySchema")," in the code."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},"FactorySchema")," is an object that can handle different\ntypes of values - including ",(0,i.kt)("strong",{parentName:"p"},"other factories, functions and generators!")))),(0,i.kt)("p",null,"You can place instances of TypeFactory as values:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="factories.ts"',title:'"factories.ts"'},"import { TypeFactory } from 'interface-forge';\nimport { User, UserProfile } from './types';\n\nconst UserProfileFactory = new TypeFactory<UserProfile>({\n    profession: 'cook',\n    gender: 'male',\n    age: 27,\n});\n\nconst UserFactory = new TypeFactory<User>({\n    firstName: 'John',\n    lastName: 'Smith',\n    email: 'js@example.com',\n    profile: UserProfileFactory,\n    cats: [],\n});\n")),(0,i.kt)("p",null,"When building an instance of UserFactory, the nested UserProfileFactorys will be built. The decision whether to use\nthe async or sync build methods depends on what method was called on the containing factory. Thus if the async\nUserFactory.build()\nis called, then then async UserProfileFactory.build() will be called in the nested factory etc."))}f.isMDXComponent=!0}}]);